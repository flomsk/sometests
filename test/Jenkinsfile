pipeline {

  environment {
    ECRPASS = credentials('ecrpass')
    KUBECONF = credentials('kopsconfig')
    APP_NAME = "testapp"
    IMAGE_TAG = "749310277795.dkr.ecr.us-east-1.amazonaws.com/testapp:${env.BRANCH_NAME}.${env.BUILD_NUMBER}"
  }

  agent {
    kubernetes {
      label 'sample-app'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  component: ci
spec:
  # Use service account that can deploy to all namespaces
  serviceAccountName: tiller
  containers:
  - name: npm
    image: node:10
    command:
    - cat
    tty: true
  - name: docker
    image: docker:latest
    command:
    - cat
    tty: true
  - name: kubectl
    image: dtzar/helm-kubectl:2.16.1
    command:
    - cat
    tty: true
"""
}
  }
  stages {
    stage('Install') {
      steps {
        container('npm') {
          sh """
            npm install
          """
        }
      }
    }
    stage('Build') {
      steps {
        container('docker') {
          sh """
            docker login -u AWS -p $ECRPASS -e none https://749310277795.dkr.ecr.us-east-1.amazonaws.com
            docker build -t ${IMAGE_TAG} .
            docker push ${IMAGE_TAG}
          """
        }
      }
    }
    stage('Deploy') {
      // Production branch
      when { branch 'master' }
      withKubeConfig([credentialsId: 'kopsconfig', serverUrl: 'https://api-olegscluster-k8s-loca-bn9akp-2123449763.us-east-1.elb.amazonaws.com'])
      steps{
        container('kubectl') {
        // Change deployed image in canary to the one we just built
          sh """
            sed -i.bak 's#749310277795.dkr.ecr.us-east-1.amazonaws.com/testapp:1.0.0#${IMAGE_TAG}#' ./k8s/production/backend.yaml
            cat $KUBECONF > kubeconfig
            export KUBECONFIG=kubeconfig
            kubectl apply -f ./k8s/production/backend.yaml
        }
      }
    }
  }
}
